@using Stolarus2.Data.Properties
@using Stolarus2.Data.Contracts

@model IPagedCollection

@{
    var controller = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();

    ViewBag.Title = controller;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@controller</h2>

<div style="padding-bottom: 10px;">
    <button class="btn btn-primary create-item">@Resources.CreateNew</button>
</div>

<div>
    <table class="table" id="grid">

        <thead>
            <tr>
            @foreach (string propName in ViewBag.ListFields)
            {
                <th>@propName</th>
            }
                <th></th>
            </tr>
        </thead>

        <tbody></tbody>

    </table>
</div>

<div id="pager" style="margin: 6px;">
</div>

<!-- Modal -->
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="modal-content"></div>
    </div>
</div>

<!-- loading spinner -->
<div class="modal fade" id="loader" role="dialog" style="top: 300px; left: 300px;">
    <div class="modal-dialog">
        <div class="loader"></div>
    </div>
</div>

@section scripts {

    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

        function InitModal() {
            $('.edit-item').click(function() {
                var url = "@Url.Content("~/")@controller/UpdatePartial";
                var id = $(this).attr('data-id');
                $.get(url + '/' + id, function(data) {
                    $('#modal-content').html(data);

                    $('#modal').modal('show');
                    jQuery.validator.unobtrusive.parse('#frmModal');

                    AddAsterisk();
                });
            });

            $('.create-item').click(function() {
                var url = "@Url.Content("~/")@controller/CreatePartial";
                $.get(url, function(data) {
                    $('#modal-content').html(data);

                    $('#modal').modal('show');
                    jQuery.validator.unobtrusive.parse('#frmModal');

                    AddAsterisk();
                });
            });

            $('.delete-item').click(function () {

                if (confirm('@Resources.DeleteConfirm'))
                {
                    var url = "@Url.Content("~/")@controller/DestroyPartial";
                    var id = $(this).attr('data-id');
                    $.get(url + '/' + id, function(data) {

                        totalCount = data.totalCount;

                        var pageSize = @Model.PageSize;
                        var pageIndex = Math.floor((totalCount - 1) / pageSize) + 1;
                        if (pageIndex <= currentPageIndex)
                        {
                            currentPageIndex = pageIndex;
                            InitPager(currentPageIndex);
                        }
                        
                        RefreshGrid(currentPageIndex);

                    });
                }
            });
        }

        function InitPager(pageIndex) {

            var pageSize = @Model.PageSize;

            $('#pager').empty();

            for (i = 1; i <= (totalCount - 1) / pageSize + 1; i++)
            {
                $('#pager').append('<button class="btn btn-primary page-item ' + (i == pageIndex ? "disabled" : "") + '" style="margin: 4px;" data-id="' + i +'">' + i + '</button>');
            }

            $('.page-item').click(function () {
                currentPageIndex = $(this).attr('data-id');

                $('.page-item').removeClass("disabled");
                $(this).addClass("disabled");

                RefreshGrid(currentPageIndex);
            });
        }

        function RefreshGrid(pageIndex) {
            $('#loader').modal('show');
            var url = "@Url.Content("~/")@controller/GetPagedList/" + pageIndex;
            $.ajax({
                type: 'GET',
                dataType: 'Json',
                url: url,
                success: function(data) {

                    $('table#grid TBODY').empty();

                    $.each(data, function (idx, item) {
                        var row = "<tr>";

                    @foreach (string propName in ViewBag.ListFields)
                    {
                        @Html.Raw("row += '<td>' + (item." + propName + " || '') + '</td>';");
                    }
                        row += "<td align='right'><button class='btn btn-primary edit-item' data-id='" + item.Id + "'>@Resources.Edit</button> <button class='btn btn-primary delete-item' data-id='" + item.Id + "'>@Resources.Delete</button></td>";
                        row += "</tr>";

                        $('table#grid TBODY').append(row);
                    });

                    $('#loader').modal('hide');

                    InitModal();
                },
                processData: false,
                async: true
            });
        }

        function AddAsterisk() {
            $('input[type=text]').each(function() {
                var req = $(this).attr('data-val-required');
                if (undefined != req) {
                    var label = $('label[for="' + $(this).attr('id') + '"]');
                    var text = label.text();
                    if (text.length > 0 && text.indexOf('*') === -1) {
                        label.append('<span style="color:red"> *</span>');
                    }
                }
            });
        }

        function onCreateSuccess(data) {

            totalCount = data.totalCount;

            var pageSize = @Model.PageSize;
            var pageIndex = Math.floor((totalCount - 1) / pageSize) + 1;
            if (pageIndex != currentPageIndex)
            {
                currentPageIndex = pageIndex;
                InitPager(currentPageIndex);
            }

            RefreshGrid(currentPageIndex);
        }

        var totalCount = @Model.TotalCount ;
        var currentPageIndex = 1;

        $(document).ready(function() {

            InitModal();

            InitPager(currentPageIndex);

            RefreshGrid(currentPageIndex);
        });

</script>
}