@using Stolarus2.Data.Properties
@using Stolarus2.Data.Contracts

@model IPagedCollection

@{
    var controller = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();

    ViewBag.Title = controller;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@controller</h2>

<div style="padding-bottom: 10px;">
    <button class="btn btn-primary create-item">@Resources.CreateNew</button>
</div>

<div>
    <table class="table" id="grid">

        <thead>
            <tr>
                @foreach (string propName in ViewBag.ListFieldHeaders)
                {
                    <th>@propName</th>
                }
                <th></th>
            </tr>
        </thead>

        <tbody></tbody>

    </table>
</div>

<div id="pager" style="margin: 6px;">
</div>

<!-- Modal -->
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="modal-content"></div>
    </div>
</div>

<!-- loading spinner -->
<div class="modal fade" id="loader" role="dialog" style="top: 300px; left: 300px;">
    <div class="modal-dialog">
        <div class="loader"></div>
    </div>
</div>

@section scripts {

    @Styles.Render("~/Content/datetimepicker")
    @Scripts.Render("~/bundles/datetimepicker")

    @Styles.Render("~/Content/dropzone")
    @Scripts.Render("~/bundles/dropzone")

    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

    function InitModal() {

        $('.edit-item').unbind();
        $('.edit-item').click(function() {
            var url = "@Url.Content("~/")@controller/UpdatePartial";
            var id = $(this).attr('data-id');
            $.get(url + '/' + id, function(data) {
                $('#modal-content').html(data);

                $('#modal').modal('show');
                jQuery.validator.unobtrusive.parse('#frmModal');

                AddAsterisk();

                //translation -specific
                InitEntityList();
                ShowEntityList();
                $('#Code').prop("disabled", true);
                $('#Table').prop("disabled", true);
                $('#Field').prop("disabled", true);
                $('#EntityID').prop("disabled", true);
            });
        });

        $('.create-item').unbind();
        $('.create-item').click(function() {
            var url = "@Url.Content("~/")@controller/CreatePartial";
            $.get(url, function(data) {
                $('#modal-content').html(data);

                $('#modal').modal('show');
                jQuery.validator.unobtrusive.parse('#frmModal');

                AddAsterisk();

                //translation -specific
                InitEntityList();
            });
        });

        $('.delete-item').unbind();
        $('.delete-item').click(function () {

            if (confirm('@Resources.DeleteConfirm'))
            {
                var url = "@Url.Content("~/")@controller/DestroyPartial";
                var id = $(this).attr('data-id');
                $.get(url + '/' + id, function(data) {

                    totalCount = data.totalCount;

                    var pageSize = @Model.PageSize;
                    var pageIndex = Math.floor((totalCount - 1) / pageSize) + 1;
                    if (pageIndex <= currentPageIndex)
                    {
                        currentPageIndex = pageIndex;
                        InitPager(currentPageIndex);
                    }

                    RefreshGrid(currentPageIndex);

                });
            }
        });
    }

    function InitPager(pageIndex) {

        var pageSize = @Model.PageSize;

        $('#pager').empty();

        for (i = 1; i <= (totalCount - 1) / pageSize + 1; i++)
        {
            $('#pager').append('<button class="btn btn-primary page-item ' + (i == pageIndex ? "disabled" : "") + '" style="margin: 4px;" data-id="' + i +'">' + i + '</button>');
        }

        $('.page-item').click(function () {
            currentPageIndex = $(this).attr('data-id');

            $('.page-item').removeClass("disabled");
            $(this).addClass("disabled");

            RefreshGrid(currentPageIndex);
        });
    }

    function RefreshGrid(pageIndex) {
        $('#loader').modal('show');
        var url = "@Url.Content("~/")@controller/GetPagedList/" + pageIndex;
        $.ajax({
            type: 'GET',
            dataType: 'Json',
            url: url,
            success: function(data) {

                $('table#grid TBODY').empty();

                $.each(data, function (idx, item) {
                    var row = "<tr>";

                var val = '';
                @foreach (Stolarus2.Admin.ViewModels.FieldInfo prop in ViewBag.ListFields)
                {
                    if (prop.UIHint == "_Image")
                    {
                        @Html.Raw("row += '<td><img src=/admin/Images/Image/' + item." + prop.Name + " + ' width=100 height=100 /></td>';\n");
                    }
                    else if(prop.Type == "DateTime")
                    {
                        @Html.Raw("row += '<td>' + ((new Date(parseInt(item." + prop.Name + ".substr(6)))).toLocaleString()) + '</td>';\n");
                    }
                    else
                    {
                        @Html.Raw("row += '<td>' + (item." + prop.Name + " || '') + '</td>';\n");
                    }
                }
                    row += "<td align='right'><button class='btn btn-primary edit-item' data-id='" + item.Id + "'>@Resources.Edit</button> <button class='btn btn-primary delete-item' data-id='" + item.Id + "'>@Resources.Delete</button></td>";
                    row += "</tr>";

                    $('table#grid TBODY').append(row);
                });

                $('#loader').modal('hide');

                InitModal();
            },
            processData: false,
            async: true
        });
    }

    function AddAsterisk() {
        $('input[type=text]').each(function() {
            var req = $(this).attr('data-val-required');
            if (undefined != req) {
                var label = $('label[for="' + $(this).attr('id') + '"]');
                var text = label.text();
                if (text.length > 0 && text.indexOf('*') === -1) {
                    label.append('<span style="color:red"> *</span>');
                }
            }
        });
    }

    function onCreateSuccess(data) {

        totalCount = data.totalCount;

        var pageSize = @Model.PageSize;
        var pageIndex = Math.floor((totalCount - 1) / pageSize) + 1;
        if (pageIndex != currentPageIndex)
        {
            currentPageIndex = pageIndex;
            InitPager(currentPageIndex);
        }

        RefreshGrid(currentPageIndex);
    }

    function InitEntityList() {

        $('#Code').unbind();
        $('#Code').change(function () {
            ShowEntityList();
        });

        $('#Table').unbind();
        $('#Table').change(function () {
            ShowEntityList();
        });

        $('#Field').unbind();
        $('#Field').change(function () {
            ShowEntityList();
        });
    }

    function ShowEntityList() {

        var table = $('#Table').val();
        var field = $('#Field').val();

        if (table && field) {

            var url = "@Url.Content("~/")@controller/GetEntityList";

            $('#EntityID').unbind();
            $('#EntityID').empty();
            $('#EntityID').append($("<option />").val("").text('< @Resources.SelectItem >'));

            $.get(url + '?table=' + table + "&field=" + field, function (data) {
                $.each(data, function () {
                    $('#EntityID').append($("<option />").val(this.Id).text(this.Name));
                });
                ShowOriginal();
            });

            $('#EntityID').change(function () {
                ShowOriginal();
            });
        }
    }

    function ShowOriginal() {
        
        var url = "";

        if ($('#Id').val()) {
            url = "@Url.Content("~/")@controller/GetTranslationById" + '?id=' + $('#Id').val();
        }
        else {
            var table = $('#Table').val();
            var field = $('#Field').val();
            var entityId = $('#EntityID').val();
            url = "@Url.Content("~/")@controller/GetTranslation" + '?table=' + table + "&field=" + field + "&entityId=" + entityId;
        }
        
        $.get(url, function (item) {
            if (item) {
                $('#EntityID').val(item.EntityID);
                $('#Original').html(item.Original);
                $('#Text').html(item.Text);
            }
            else {
                $('#Original').empty();
            }
        });
    }

    var totalCount = @Model.TotalCount ;
    var currentPageIndex = 1;

    $(document).ready(function() {

        InitModal();

        InitPager(currentPageIndex);

        RefreshGrid(currentPageIndex);
    });

</script>
}